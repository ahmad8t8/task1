{
  "openapi": "3.0.0",
  "info": {
    "title": "Admin-Console",
    "description": "This is a sample ADSS Admin console Security.",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about ascertia",
    "url": "https://www.ascertia.com/"
  },
  "servers": [
    {
      "url": "https://localhost:8081"
    }
  ],
  "paths": {
    "/authenticate": {
      "get": {
        "tags": [
          "Authenticate"
        ],
        "summary": "This call authenticates the user via TLS client authentication certificate.  If successful, access and user data are returned.",
        "operationId": "authenticateUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfo"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User Api"
        ],
        "summary": "Get all the users",
        "description": "This can only be done by the authenticated user.",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Api"
        ],
        "summary": "update user",
        "description": "This can only be done by the authenticated user.",
        "operationId": "updateUser",
        "requestBody": {
          "description": "update user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Api"
        ],
        "summary": "Create user",
        "description": "This can only be done by the authenticated user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/{Id}": {
      "get": {
        "tags": [
          "User Api"
        ],
        "summary": "Get user by Id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "The name that needs to be fetched. fetch by user Id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Api"
        ],
        "summary": "Delete user by Id",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "Delete fetched user at this id.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TokenInfo": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "jwt access token self containing the signed info with our private use to authenticate user"
          },
          "refreshToken": {
            "type": "string",
            "description": "jwt access token self containing the signed info with our private use to authenticate user"
          },
          "expiresIn": {
            "type": "integer",
            "description": "jwt access token will expires in"
          },
          "refeshExpiresIn": {
            "type": "integer",
            "description": "jwt refesh token will expires in"
          },
          "sessionExpiresIn": {
            "type": "string",
            "description": "session expire time"
          },
          "tokenType": {
            "type": "string",
            "description": "Token Type i.e \"bearer\""
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "xml": {
          "name": "TokenInfo"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "user id"
          },
          "firstname": {
            "type": "string",
            "description": "user first name"
          },
          "lastname": {
            "type": "string",
            "description": "user last name"
          },
          "rolename": {
            "type": "string",
            "description": "user role name"
          },
          "emailaddress": {
            "type": "string",
            "description": "user email address"
          },
          "mobileno": {
            "type": "string",
            "description": "user mobile Number"
          },
          "certificate": {
            "type": "string",
            "description": "user certificate"
          },
          "status": {
            "type": "string",
            "description": "user Status",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "createdat": {
            "type": "integer",
            "description": "user created at"
          },
          "createdby": {
            "type": "string",
            "description": "created by"
          },
          "lastupdatedat": {
            "type": "string",
            "description": "user last updated at"
          },
          "lastupdatedby": {
            "type": "integer",
            "description": "user last updated by"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Error"
        }
      },
      "Data": {
        "type": "object",
        "properties": {
          "loginTime": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Data"
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}